import pandas as pd
import pickle


# # 2019-09.csv 불러오기 
# csv_data_09 = pd.read_csv('../../data/2019-09.csv', encoding = 'CP949', 
# dtype={
#     "회원_시도명": str, 
#     "회원_시군구명": str,
#     "개인기업구분": str,
#     "성별": str,
#     "연령": str,
#     "매출년월일": str,
#     "가맹점_시도명": str,
#     "가맹점_시군구명": str,
#     "가맹점_읍면동명": str,
#     })
# # 2019-10.csv 불러오기
# csv_data_10 = pd.read_csv('../../data/2019-10.csv', encoding = 'CP949', 
# dtype={
#     "회원_시도명": str, 
#     "회원_시군구명": str,
#     "개인기업구분": str,
#     "성별": str,
#     "연령": str,
#     "매출년월일": str,
#     "가맹점_시도명": str,
#     "가맹점_시군구명": str,
#     "가맹점_읍면동명": str,
#     })

# # 컬럼값 처리, 서울로 필터링
# df_09 = csv_data_09[(csv_data_09["가맹점_시도명"] == "서울")&(csv_data_09["개인기업구분"]=="개인")][[
#     "가맹점_시도명", 
#     "가맹점_시군구명",
#     "승인시간대1",
#     "가맹점업종코드",
#     "결제금액", 
#     "결제건수",
#     "회원수"]]

# df_10 = csv_data_10[(csv_data_10["가맹점_시도명"] == "서울")&(csv_data_10["개인기업구분"]=="개인")][[
#     "가맹점_시도명", 
#     "가맹점_시군구명",
#     "승인시간대1", 
#     "가맹점업종코드",
#     "결제금액", 
#     "결제건수",
#     "회원수"]]

# # 합치기
# df_all = pd.concat([df_09, df_10])

# # row 수 확인
# # print("9월 데이터 row 수: ", len(df_09)) # 7476758
# # print("10월 데이터 row 수: ", len(df_10)) # 7875424
# # print("전체 데이터 row 수: ", len(df_all)) # 15352182

# # # 컬럼명 변경
# df_all = df_all.rename(
#     columns= {
#         '가맹점_시도명': 'city', 
#         '가맹점_시군구명': 'district', 
#         '승인시간대1': 'time',
#         '가맹점업종코드': 'code',
#         '결제금액': 'all_payment',
#         '결제건수': 'pay_counts',
#         '회원수': 'customers',
#         })

# =======================pickle 사용================================

# 쓰기
# with open('df_district_all.p', 'wb') as file:
#     pickle.dump(df_all, file)

# # 읽기
with open('df_district_all.p', 'rb') as file:
    df_all = pickle.load(file)

esential_code_list = [
    1001,1003,1004,1007,1008,1010,1099,
    1101,1102,1104,1105,1199,1201,1202,
    1203,1204,1205,1206,1207,1208,1299,3302,3303,
    3401,3402,3403,3404,3405,3407,3408,
    3499,2299,2312,2317,4113,7104,7299,
    3001,3002,3101,3102,3201,3199,3202,
    3203,3204,3299,6101,6102,6103,6109,
    6110,5501,5601,5602,5603,5502,5604,5609,5605,5610,5611,5612,5699,
    4001,4107,4108,4123,4104,3406,4111,4114,4198,4200,
    6117,8407,4199,5001,5101,5102,5104,
    5103,5201,5302,5303,5304,5305,5306,
    5399,5301,5401,5402,5403,5404,6001,
    6002,6003,6004,6005,6006,6007,6008,
    6009,6010,6011,6012,6013,6015,6016,
    6021,6099,6014,6019,6020,6018,6107,
    6113,6201,6202,6203,6204,6205,6206,
    6207,6208,6209,6210,6111,6112,6299,
    7001,7002,7004,7006,7007,
    7008,7009,7010,7107,7099,7101,7102,
    7103,7105,7106,7108,7199,8109,8110,8101,8102,8106,
    8112,8113,8114,8111,8199,6114,6115,
    6116,6105,6199
]


code_to_tob = {
  "1003": "한복점",
  "1004": "기성복점",
  "1007": "아동 및 유아복점",
  "1008": "내의판매점",
  "1010": "양품점",
  "1099": "기타 의류",
  "1101": "옷감판매점",
  "1102": "침구,커튼,카펫트점",
  "1104": "수예점",
  "1105": "자석요",
  "1199": "기타 직물",
  "1201": "악세사리점",
  "1202": "귀금속점",
  "1203": "시계전문점",
  "1204": "안경점",
  "1205": "가방점",
  "1206": "제화점",
  "1207": "일반신발점",
  "1208": "가발전문점",
  "1299": "기타 신변잡화",
  "2002": "휴게음식점",
  "2003": "제과점/아이스크림점",
  "2004": "커피/음료전문점",
  "2099": "패스트푸드점",
  "2104": "한식",
  "2107": "일식/생선회집",
  "2109": "중식",
  "2110": "양식",
  "2111": "부페",
  "2112": "일반주점",
  "2113": "패밀리레스토랑",
  "2199": "일반음식점 기타",
  "2401": "미곡상",
  "2402": "정육점",
  "2403": "인삼판매점",
  "2404": "건강식품점",
  "2406": "농．수．축산물점",
  "2407": "주류판매점",
  "2499": "기타 식품",
  "3302": "연탄 및 유류판매점",
  "3303": "가스판매점",
  "3401": "건축자재",
  "3402": "기계류 건축설비",
  "3403": "철물점",
  "3404": "실내장식",
  "3405": "지물 및 천막",
  "3407": "보안경비시스템",
  "3408": "주택,건설",
  "3499": "기타 건축자재",
  "2299": "단란주점",
  "2312": "유흥주점",
  "2317": "나이트클럽",
  "4113": "노래방",
  "7104": "안마시술소",
  "7299": "유흥기타",
  "3001": "일반가구점",
  "3002": "철재가구점",
  "3101": "가전제품점",
  "3102": "냉난방기구",
  "3201": "조명  전기기구점",
  "3199": "기타 전자제품",
  "3202": "주방기구점",
  "3203": "주방 및 가정용품점",
  "3204": "정수기판매점",
  "3299": "기타 주방용품",
  "6101": "사무용기기",
  "6102": "정보통신기기",
  "6103": "컴퓨터기기",
  "6109": "피아노판매점",
  "6110": "기타악기판매점",
  "5501": "국산자동차판매점",
  "5601": "수입자동차판매점",
  "5602": "중고자동차판매점",
  "5603": "오토바이판매점",
  "5502": "자전거판매점",
  "5604": "기타운송기구판매점",
  "5608": "주유소",
  "5609": "충전소",
  "5605": "차량 정비/부품/인테리어",
  "5610": "주차장",
  "5611": "세차장",
  "5612": "차량견인업",
  "5699": "기타 차량서비스",
  "4001": "백화점",
  "4107": "대형마트",
  "4108": "농．수．축협직판장",
  "4123": "대형쇼핑센터",
  "4101": "슈퍼마켓",
  "4112": "편의점",
  "4110": "일반잡화판매점",
  "4103": "소비조합",
  "4104": "선물의집",
  "4115": "전자상거래",
  "4118": "전자상거래(Passcity)",
  "4120": "전자상거래PG",
  "4121": "전자상거래오픈마켓",
  "4124": "전자상거래상품권",
  "4125": "전자상거래PG상품권",
  "4126": "전자상거래오픈마켓상품권",
  "4106": "통신판매 ",
  "3406": "농어업용품",
  "4111": "중고물품 판매점",
  "4114": "종교상품점",
  "4198": "다단계판매기타",
  "4200": "상품권",
  "6117": "성인용품점",
  "8407": "자동판매기 운영업",
  "4199": "기타유통업",
  "4201": "공무원연금매점",
  "4202": "공공기관직영점",
  "4204": "보훈연금매점",
  "5001": "특급관광호텔",
  "5101": "일반관광호텔",
  "5102": "기타관광호텔",
  "5104": "펜션/민박",
  "5103": "기타숙박업",
  "5201": "항공사",
  "5302": "고속.시외버스",
  "5303": "철도",
  "5304": "여객선",
  "5305": "렌트카",
  "5306": "택시",
  "5399": "기타 운송수단",
  "5301": "관광여행사",
  "5401": "관광기념품점",
  "5402": "민예·공예·토산품",
  "5403": "외국인전용점",
  "5404": "면세점",
  "6001": "스포츠용품점",
  "6002": "레저용품점",
  "6003": "총포류판매점",
  "6004": "골프장",
  "6005": "골프연습장",
  "6006": "테니스장",
  "6007": "볼링장",
  "6008": "스키장",
  "6009": "수영장",
  "6010": "종합스포츠센터",
  "6011": "당구장",
  "6012": "놀이공원",
  "6013": "레포츠클럽",
  "6015": "이벤트업",
  "6016": "외국인전용카지노",
  "6021": "요가",
  "6099": "기타 레저업소",
  "6014": "영화관",
  "6019": "공연장/전시장",
  "6020": "경기장",
  "6018": "비디오방/게임방",
  "6107": "사진관",
  "6113": "서점",
  "6201": "화랑",
  "6202": "화방",
  "6203": "화원 ",
  "6204": "완구점",
  "6205": "애완동물",
  "6206": "골동품점",
  "6207": "표구사",
  "6208": "수족관",
  "6209": "티켓판매(통신판매)",
  "6210": "티켓판매(전자상거래)",
  "6111": "음반판매점",
  "6112": "비디오 및 도서대여점",
  "6299": "문화/취미 기타",
  "7001": "종합병원",
  "7002": "일반·치과·한방병원",
  "7003": "일반·치과·한의원",
  "7004": "건강진단센터",
  "7005": "약국",
  "7006": "한약방",
  "7007": "동물병원",
  "7008": "유사의료업",
  "7009": "제약회사/의약품도매업체",
  "7010": "산후조리원",
  "7107": "의료기기 및 용품",
  "7099": "제약/의료 기타",
  "7101": "이용원",
  "7102": "미용원",
  "7103": "피부미용원",
  "7105": "찜질방/목욕탕",
  "7106": "화장품점",
  "7108": "미용재료",
  "7199": "미용 기타",
  "8107": "초.중.고등학교",
  "8108": "대학．대학원",
  "8115": "대학．대학원(등록금)",
  "8116": "초중고 학교납입금(자동납부)",
  "8109": "유치원/어린이집/놀이방",
  "8110": "유아전문 교육기관/놀이시설",
  "8101": "기술/사무/가정계학원",
  "8102": "예체능계학원",
  "8106": "문리계학원",
  "8112": "외국어학원",
  "8113": "자동차학원",
  "8114": "문화센터",
  "8111": "독서실",
  "8199": "기타학원",
  "6114": "문방구점",
  "6115": "교육기자재",
  "6116": "학습지",
  "6105": "과학기자재점",
  "6199": "기타 학습자재",
  "8001": "생명보험",
  "8002": "손해보험",
  "8099": "기타 보험",
  "8201": "용역서비스업",
  "8216": "유학원",
  "8202": "인쇄 및 광고",
  "8203": "기계 및 장비임대업",
  "8204": "보관 및 창고업",
  "8205": "화물운송업",
  "8217": "시설대여업",
  "8210": "부동산 중개업",
  "8218": "부동산임대",
  "8211": "전문서비스업",
  "6104": "소프트웨어업",
  "8406": "세탁소",
  "8409": "철학관",
  "8299": "기타 용역서비스",
  "8301": "가정용품수리",
  "8302": "사무용기기수리",
  "8303": "컴퓨터 및 통신기기수리",
  "8304": "열쇠/도장",
  "8399": "기타 수리서비스",
  "8401": "결혼식장",
  "8402": "결혼서비스업",
  "8404": "장의서비스/제수용품",
  "8206": "케이블ＴＶ",
  "8207": "인터넷이용료",
  "8208": "공과금",
  "8212": "전화요금",
  "8213": "전기 수도",
  "8215": "관리비",
  "8214": "우체국(우편요금)",
  "8219": "국세",
  "8220": "지방세",
  "8221": "도시가스",
  "8408": "단체회비",
  "8410": "기부금",
  "9002": "기계류 제조/도매업",
  "9003": "식품류 제조/도매업",
  "9001": "기타 제조/도매업",
  "9005": "RF대중교통",
  "9013": "RF유료도로.터널",
  "9014": "RF공항버스",
  "9099": "RF기타운송수단",
  "9004": "구매전용",
  "9006": "RF유통기관",
  "8209": "그룹사 거래업체",
  "9007": "바우처(Voucher) ",
  "9008": "부동산중개업소 (당사 회원)",
  "9009": "부동산임대/관리",
  "9010": "바우처(가사간병) ",
  "9011": "아이행복어린이집",
  "9012": "아이행복유치원"
}

df_all = df_all[df_all["code"].isin(esential_code_list)]

df_all['code'] = df_all['code'].astype(str)

df_all['tob'] = df_all['code'].apply(lambda x: code_to_tob[x])

df_all_esen = df_all.groupby(["district", "tob"])[["all_payment"]].sum().reset_index()
df_all_esen["rank"] = df_all_esen.groupby('district')['all_payment'].rank(method='min', ascending=False)
district_list = [
    "강남구","강동구","강북구","강서구","관악구",
    "광진구","구로구","금천구","노원구","도봉구",
    "동대문구","동작구","마포구","서대문구","서초구",
    "성동구","성북구","송파구","양천구","영등포구",
    "용산구","은평구","종로구","중구","중랑구"]
for i in district_list:
    print(df_all_esen[df_all_esen["district"]==i].sort_values(by="rank").head(n=3)[["district", "tob", "rank"]])


# 지역별 업종에 따른 소비량(결제량) 순위
# df_district_by_code = df_all.groupby(["district", "code"])[["all_payment"]].sum()
# df_district_by_code_1 = df_district_by_code[df_district_by_code.index.get_level_values(0)=="1.10대"]
# print(df_district_by_code.unstack())

# df_all_age = df_district_top5_by_age_10.rank(method='min', ascending=False).reset_index().set_index(["district"])["all_payment"].rename(columns={"all_payment":"10대"})

# age_list = ["2.20대", "3.30대", "4.40대", "5.50대", "6.60대", "7.70대이상"]
# for i in age_list:
#     df_district_top5_by_age_i = df_district_top5_by_age[df_district_top5_by_age.index.get_level_values(0)==i]
#     df_i_age = df_district_top5_by_age_i.rank(method='min', ascending=False).reset_index().set_index(["district"])["all_payment"].rename(columns={"all_payment":i})
#     df_all_age = pd.concat([df_all_age, df_i_age], axis=1)

# # 결과
# df_all_age_result = df_all_age.T
# df_all_age_result.index = ["10대", "20대", "30대", "40대", "50대", "60대", "70대이상"]
# all_age_real_result = df_all_age_result.reset_index()
# print(all_age_real_result)



# age_time_list = []
# age_time_list.append(all_age_real_result)
# age_time_list.append(all_time_real_result)

# with open('age_time_list.p', 'wb') as file:
#     pickle.dump(age_time_list, file)